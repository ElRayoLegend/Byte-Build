Creacion el Pom.xml del Proyecto ByteAndBuild

<groupId>org.byteandbuild</groupId>
    <artifactId>ByteAndBuild</artifactId>
      <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

nombre del proyecto, GrupoId con la nomenclatura acordada, Version 1.0 de SNAPSHOT
Empacketamiento de tipo War

 <name>ByteAndBuild</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jakartaee>10.0.0</jakartaee>
    </properties>

Version de Jakartaee 10

Dependencias las buscamos en documentacion para poder levantar nuestro proyecto

<dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakartaee}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.1.0.Final</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.12</version>
        </dependency>
	<dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jakarta.servlet.jsp.jstl</artifactId>
            <version>2.0.0</version>
        </dependency>

tales como jakartaee-api
hibernate-6.1.0
connector jdbc 8.0.12
logicamente agregamos la persistencia 3.0 para que el proyecto pueda conectarse
correctamente  la base de datos
utilizamos Tambien Jakarta.servlet.jsp.jstl para los jsp


 <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat9-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>



Tambien agregamos los plugins para maven version 3.8.1
usando la version 11 de java

groupId: El mismo grupo de plugins de Apache Maven.
artifactId: Identificador del plugin WAR
de Maven, que se utiliza para construir archivos WAR (Web Application Archive).

groupId: El grupo de plugins de Apache Tomcat para Maven.
artifactId: Identificador del plugin espec√≠fico para Tomcat 9.




